{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/user/NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MetaData from '../layouts/MetaData';\nimport { resetPassword, loadUser, clearErrors } from \"../../actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewPassword = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.forgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"password updated successfully\");\n      history.push(\"/login\");\n    }\n  }, [dispatch, alert, error, success, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"password\", password);\n    formData.set(\"confirmpassword\", confirmpassword);\n    dispatch(resetPassword(match.params.token, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Reset Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"shadow-lg\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mb-3\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password_field\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password_field\",\n              className: \"form-control\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_password_field\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_password_field\",\n              className: \"form-control\",\n              value: confirmpassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"new_password_button\",\n            type: \"submit\",\n            className: \"btn btn-block py-3\",\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewPassword, \"WBbP7cdo5zWGJ/CaYNtsWaGZZrQ=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = NewPassword;\nexport default NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/user/NewPassword.js"],"names":["React","useEffect","useState","useAlert","useDispatch","useSelector","MetaData","resetPassword","loadUser","clearErrors","NewPassword","history","match","password","setPassword","confirmpassword","setConfirmPassword","alert","dispatch","error","success","state","forgotPassword","push","submitHandler","e","preventDefault","formData","FormData","set","params","token","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\n\nimport MetaData from '../layouts/MetaData';\n\nimport {resetPassword,loadUser,clearErrors} from \"../../actions/userActions\";\n\nconst NewPassword = ({history,match}) => {\nconst [password,setPassword] = useState('');\nconst [confirmpassword,setConfirmPassword] = useState('');\nconst alert = useAlert();\nconst dispatch = useDispatch();\nconst {error,success} = useSelector(state=>state.forgotPassword);\nuseEffect(() => {\n   if(error){\n       alert.error(error);\n       dispatch(clearErrors());\n   }\n   if(success){\n       alert.success(\"password updated successfully\");\n       history.push(\"/login\");\n    }\n}, [dispatch,alert,error,success,history])\nconst submitHandler = (e)=>{\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"password\",password);\n    formData.set(\"confirmpassword\",confirmpassword);\n    dispatch(resetPassword(match.params.token,formData))\n   }\n    return (\n        <>\n        <MetaData title={'Reset Password'}></MetaData>\n        <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">New Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange={(e)=>setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={confirmpassword}\n                            onChange={(e)=>setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        id=\"new_password_button\"\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\">\n                        Set Password\n                    </button>\n\n                </form>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default NewPassword\n"]},"metadata":{},"sourceType":"module"}