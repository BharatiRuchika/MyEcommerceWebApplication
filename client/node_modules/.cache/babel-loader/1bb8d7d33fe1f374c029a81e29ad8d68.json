{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_ORDER_FAIL, CREATE_ORDER_SUCCESS, CREATE_ORDER_REQUEST, CLEAR_ERRORS, MY_ORDERS_FAIL, MY_ORDERS_SUCCESS, MY_ORDERS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ALL_ORDERS_SUCCESS, ALL_ORDERS_REQUEST, ALL_ORDERS_FAIL, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_REQUEST, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  console.log(\"im in create order\");\n  console.log(\"order\", order);\n\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"https://my-ecommerce-web-application.vercel.app/order/neworder\", order, config);\n    console.log(\"order Data\", data);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get currently logged in user orders\n\nexport const myOrders = () => async (dispatch, getState) => {\n  console.log(\"im in myorder\");\n\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"https://my-ecommerce-web-application.vercel.app/order/myorders\");\n    console.log(\"data\", data);\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get specific order details\n\nexport const orderDetails = id => async (dispatch, getState) => {\n  console.log(\"im in order details\");\n\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/singleorder/${id}`);\n    console.log(\"data\", data);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get all orders details\n\nexport const getAllOrders = () => async (dispatch, getState) => {\n  console.log(\"im in order details\");\n\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/admin/orders`);\n    console.log(\"data\", data);\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //update order-admin\n\nexport const updateOrder = (id, orderData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`, orderData, config);\n    console.log(\"updateData\", data);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`);\n    console.log(\"deleteData\", data.success);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //clear error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/actions/orderActions.js"],"names":["axios","CREATE_ORDER_FAIL","CREATE_ORDER_SUCCESS","CREATE_ORDER_REQUEST","CLEAR_ERRORS","MY_ORDERS_FAIL","MY_ORDERS_SUCCESS","MY_ORDERS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ALL_ORDERS_SUCCESS","ALL_ORDERS_REQUEST","ALL_ORDERS_FAIL","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_REQUEST","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","createOrder","order","dispatch","getState","console","log","type","config","headers","data","post","payload","error","response","errMessage","myOrders","get","orders","orderDetails","id","getAllOrders","updateOrder","orderData","put","success","deleteOrder","delete","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA2BC,oBAA3B,EAAgDC,oBAAhD,EAAqEC,YAArE,EAAkFC,cAAlF,EAAiGC,iBAAjG,EAAmHC,iBAAnH,EAAqIC,qBAArI,EAA2JC,qBAA3J,EAAiLC,kBAAjL,EAAoMC,kBAApM,EAAuNC,kBAAvN,EAA0OC,eAA1O,EAA0PC,oBAA1P,EAA+QC,oBAA/Q,EAAoSC,iBAApS,EACIC,oBADJ,EAEGC,oBAFH,EAGEC,iBAHF,QAG2B,6BAH3B;AAIA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAS,OAAMC,QAAN,EAAeC,QAAf,KAA0B;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,KAApB;;AACA,MAAG;AACAC,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACvB;AADA,KAAD,CAAR;AAGA,UAAMwB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADK,KAAf;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,gEAAX,EAA4ET,KAA5E,EAAkFM,MAAlF,CAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,IAAzB;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACxB,oBADA;AAEL6B,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAIF,GAfD,CAeC,OAAMG,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACzB,iBADA;AAEL8B,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFvB,KAAD,CAAR;AAIH;AACJ,CAxBM,C,CA0BP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAI,OAAMb,QAAN,EAAeC,QAAf,KAA0B;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,MAAG;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACnB;AADA,KAAD,CAAR;AAIA,UAAM;AAACsB,MAAAA;AAAD,QAAS,MAAM7B,KAAK,CAACoC,GAAN,CAAU,gEAAV,CAArB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBI,IAAnB;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACpB,iBADA;AAELyB,MAAAA,OAAO,EAACF,IAAI,CAACQ;AAFR,KAAD,CAAR;AAIF,GAXD,CAWC,OAAML,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACrB,cADA;AAEL0B,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFvB,KAAD,CAAR;AAIH;AACJ,CAnBM,C,CAqBP;;AACA,OAAO,MAAMI,YAAY,GAAIC,EAAD,IAAM,OAAMjB,QAAN,EAAeC,QAAf,KAA0B;AAExDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,MAAG;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACjB;AADA,KAAD,CAAR;AAIP,UAAM;AAACoB,MAAAA;AAAD,QAAS,MAAM7B,KAAK,CAACoC,GAAN,CAAW,qEAAoEG,EAAG,EAAlF,CAArB;AACOf,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBI,IAAnB;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAClB,qBADA;AAELuB,MAAAA,OAAO,EAACF,IAAI,CAACR;AAFR,KAAD,CAAR;AAIF,GAXD,CAWC,OAAMW,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAChB,kBADA;AAELqB,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFvB,KAAD,CAAR;AAIH;AACJ,CApBM,C,CAuBP;;AACA,OAAO,MAAMM,YAAY,GAAG,MAAI,OAAMlB,QAAN,EAAeC,QAAf,KAA0B;AAEtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,MAAG;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACd;AADA,KAAD,CAAR;AAIP,UAAM;AAACiB,MAAAA;AAAD,QAAS,MAAM7B,KAAK,CAACoC,GAAN,CAAW,oEAAX,CAArB;AACOZ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBI,IAAnB;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACf,kBADA;AAELoB,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAIF,GAXD,CAWC,OAAMG,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACb,eADA;AAELkB,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFvB,KAAD,CAAR;AAIH;AACJ,CApBM,C,CAsBP;;AACA,OAAO,MAAMO,WAAW,GAAG,CAACF,EAAD,EAAIG,SAAJ,KAAgB,OAAMpB,QAAN,EAAeC,QAAf,KAA0B;AACjE,MAAG;AACAD,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACX;AADA,KAAD,CAAR;AAGA,UAAMY,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADK,KAAf;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAM7B,KAAK,CAAC2C,GAAN,CAAW,sEAAqEJ,EAAG,EAAnF,EAAqFG,SAArF,EAA+Ff,MAA/F,CAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,IAAzB;AACAP,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACZ,oBADA;AAELiB,MAAAA,OAAO,EAACF,IAAI,CAACe;AAFR,KAAD,CAAR;AAIF,GAfD,CAeC,OAAMZ,KAAN,EAAY;AACTV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAACV,iBADA;AAELe,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFvB,KAAD,CAAR;AAIH;AACJ,CAtBM;AAwBP,OAAO,MAAMW,WAAW,GAAIN,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AACnD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAM7B,KAAK,CAAC8C,MAAN,CAAc,sEAAqEP,EAAG,EAAtF,CAAvB;AACLf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,IAAI,CAACe,OAA9B;AACKtB,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,oBADD;AAELa,MAAAA,OAAO,EAAEF,IAAI,CAACe;AAFT,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOZ,KAAP,EAAc;AACZV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,iBADD;AAELY,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFxB,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMa,WAAW,GAAG,MAAI,MAAMzB,QAAN,IAAiB;AAC5CA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAACtB;AADA,GAAD,CAAR;AAGF,CAJK","sourcesContent":["import axios from \"axios\";\nimport { CREATE_ORDER_FAIL,CREATE_ORDER_SUCCESS,CREATE_ORDER_REQUEST,CLEAR_ERRORS,MY_ORDERS_FAIL,MY_ORDERS_SUCCESS,MY_ORDERS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_REQUEST,ORDER_DETAILS_FAIL,ALL_ORDERS_SUCCESS,ALL_ORDERS_REQUEST,ALL_ORDERS_FAIL,UPDATE_ORDER_SUCCESS,UPDATE_ORDER_REQUEST,UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n   DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = (order)=>async(dispatch,getState)=>{\n    console.log(\"im in create order\");\n    console.log(\"order\",order);\n    try{\n       dispatch({\n           type:CREATE_ORDER_REQUEST\n       })\n       const config = {\n         headers:{\n             \"Content-Type\":\"application/json\"\n         }\n       }\n       const {data} = await axios.post(\"https://my-ecommerce-web-application.vercel.app/order/neworder\",order,config);\n       console.log(\"order Data\",data);\n       dispatch({\n           type:CREATE_ORDER_SUCCESS,\n           payload:data\n       })\n    }catch(error){\n        dispatch({\n            type:CREATE_ORDER_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get currently logged in user orders\nexport const myOrders = ()=>async(dispatch,getState)=>{\n    console.log(\"im in myorder\");\n    try{\n       dispatch({\n           type:MY_ORDERS_REQUEST\n       })\n       \n       const {data} = await axios.get(\"https://my-ecommerce-web-application.vercel.app/order/myorders\");\n       console.log(\"data\",data);\n       dispatch({\n           type:MY_ORDERS_SUCCESS,\n           payload:data.orders\n       })\n    }catch(error){\n        dispatch({\n            type:MY_ORDERS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get specific order details\nexport const orderDetails = (id)=>async(dispatch,getState)=>{\n\n    console.log(\"im in order details\");\n    try{\n       dispatch({\n           type:ORDER_DETAILS_REQUEST\n       })\n       \nconst {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/singleorder/${id}`);\n       console.log(\"data\",data);\n       dispatch({\n           type:ORDER_DETAILS_SUCCESS,\n           payload:data.order\n       })\n    }catch(error){\n        dispatch({\n            type:ORDER_DETAILS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n\n//get all orders details\nexport const getAllOrders = ()=>async(dispatch,getState)=>{\n\n    console.log(\"im in order details\");\n    try{\n       dispatch({\n           type:ALL_ORDERS_REQUEST\n       })\n       \nconst {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/admin/orders`);\n       console.log(\"data\",data);\n       dispatch({\n           type:ALL_ORDERS_SUCCESS,\n           payload:data\n       })\n    }catch(error){\n        dispatch({\n            type:ALL_ORDERS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//update order-admin\nexport const updateOrder = (id,orderData)=>async(dispatch,getState)=>{\n    try{\n       dispatch({\n           type:UPDATE_ORDER_REQUEST\n       })\n       const config = {\n         headers:{\n             \"Content-Type\":\"application/json\"\n         }\n       }\n       const {data} = await axios.put(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`,orderData,config);\n       console.log(\"updateData\",data);\n       dispatch({\n           type:UPDATE_ORDER_SUCCESS,\n           payload:data.success\n       })\n    }catch(error){\n        dispatch({\n            type:UPDATE_ORDER_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        const { data } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`)\n   console.log(\"deleteData\",data.success);\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\n//clear error\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n }"]},"metadata":{},"sourceType":"module"}