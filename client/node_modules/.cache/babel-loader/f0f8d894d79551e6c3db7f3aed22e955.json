{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/route/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport loader from 'sass-loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    isAdmin,\n    isAuthenticated,\n    user,\n    loading\n  } = useSelector(state => state.auth); // console.log(\"im in protected route\");\n  // console.log(\"isAuthenticated\", isAuthenticated);\n  // console.log(\"loading\", loading);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => {\n          if (isAuthenticated === false) {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 36\n            }, this);\n          }\n\n          if (isAdmin === true && user.role !== \"admin\") {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 36\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 32\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(ProtectedRoute, \"k8Kcx8F6fBSQ0/v/T3J+Fziz96U=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/route/ProtectedRoute.js"],"names":["React","Route","Redirect","useSelector","loader","ProtectedRoute","component","Component","rest","isAdmin","isAuthenticated","user","loading","state","auth","props","role"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;;AACA,MAAMC,cAAc,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAC1D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA;AAAlC,MAA8CT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA/D,CAD0D,CAE1D;AACA;AACA;;AACA,sBACI;AAAA,cACKF,OAAO,KAAK,KAAZ,iBAAsB;AAAA,6BACnB,QAAC,KAAD,OAAWJ,IAAX;AAAiB,QAAA,MAAM,EACnBO,KAAK,IAAI;AACL,cAAIL,eAAe,KAAK,KAAxB,EAA+B;AAC3B,gCAAO,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,cAAID,OAAO,KAAK,IAAZ,IAAoBE,IAAI,CAACK,IAAL,KACpB,OADJ,EACa;AACT,gCAAO,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AACD,8BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH;AAXL;AAAA;AAAA;AAAA;AAAA;AADmB;AAD3B,mBADJ;AAkBH,CAvBD;;GAAMV,c;UACkDF,W;;;KADlDE,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport loader from 'sass-loader';\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    const { isAdmin, isAuthenticated, user, loading } = useSelector(state => state.auth);\n    // console.log(\"im in protected route\");\n    // console.log(\"isAuthenticated\", isAuthenticated);\n    // console.log(\"loading\", loading);\n    return (\n        <>\n            {loading === false && (<>\n                <Route {...rest} render={\n                    props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to=\"/login\"></Redirect>\n                        }\n                        if (isAdmin === true && user.role !==\n                            \"admin\") {\n                            return <Redirect to=\"/\"></Redirect>\n                        }\n                        return <Component {...props} />\n\n                    }\n                }></Route>\n            </>)}\n        </>)\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}