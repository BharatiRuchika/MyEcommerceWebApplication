{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/user/UpdatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { Link } from 'react-router-dom';\nimport { updatePassword, loadUser, clearErrors } from \"../../actions/userActions\";\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdatePassword = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user,\n    token\n  } = useSelector(state => state.auth);\n  const {\n    isUpdated,\n    loading,\n    error\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"password updated successfully\");\n      history.push(\"/me\");\n      dispatch({\n        type: UPDATE_PASSWORD_RESET\n      });\n    }\n  }, [dispatch, alert, isUpdated, error, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"oldPassword\", oldPassword);\n    formData.set(\"newPassword\", newPassword);\n    dispatch(updatePassword(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'change password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          className: \"shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mt-2 mb-5\",\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"old_password_field\",\n              children: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"old_password_field\",\n              className: \"form-control\",\n              value: oldPassword,\n              onChange: e => setOldPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new_password_field\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"new_password_field\",\n              className: \"form-control\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading ? true : false,\n            className: \"btn update-btn btn-block mt-4 mb-3\",\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdatePassword, \"H890LWbox/jRB6dzykZx74+7EPM=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdatePassword;\nexport default UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/user/UpdatePassword.js"],"names":["React","useEffect","useState","useAlert","useDispatch","useSelector","Loader","MetaData","Link","updatePassword","loadUser","clearErrors","UPDATE_PASSWORD_RESET","UpdatePassword","history","oldPassword","setOldPassword","newPassword","setNewPassword","alert","dispatch","user","token","state","auth","isUpdated","loading","error","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from 'react-router-dom';\nimport {updatePassword,loadUser,clearErrors} from \"../../actions/userActions\";\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants';\n\nconst UpdatePassword = ({history}) => {\nconst [oldPassword,setOldPassword] = useState('');\nconst [newPassword,setNewPassword] = useState('');\n\nconst alert = useAlert();\nconst dispatch = useDispatch();\nconst {user,token} = useSelector(state=>state.auth);\nconst {isUpdated,loading,error} = useSelector(state=>state.user);\n\nuseEffect(() => {\n   if(error){\n       alert.error(error);\n       dispatch(clearErrors());\n   }\n   if(isUpdated){\n       alert.success(\"password updated successfully\");\n       \n       history.push(\"/me\");\n       dispatch({\n           type:UPDATE_PASSWORD_RESET\n       })\n   }\n}, [dispatch,alert,isUpdated,error,history])\nconst submitHandler = (e)=>{\n e.preventDefault();\n const formData = new FormData();\n \n formData.set(\"oldPassword\",oldPassword);\n formData.set(\"newPassword\",newPassword);\n\n \n dispatch(updatePassword(formData))\n}\n\n\n    return (\n       <>\n       <MetaData title={'change password'}></MetaData>\n       <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form onSubmit={submitHandler} className=\"shadow-lg\">\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e)=>setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={newPassword}\n                                onChange={(e)=>setNewPassword(e.target.value)}\n                            />\n                             </div>\n\n<button type=\"submit\" disabled={loading?true:false}className=\"btn update-btn btn-block mt-4 mb-3\">Update Password</button>\n</form>\n</div>\n</div>\n       </>\n    )\n}\n\nexport default UpdatePassword\n"]},"metadata":{},"sourceType":"module"}