{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducers, productDetailsReducers, newProductReducer, deleteProductReducer, productReviewsReducer, newReviewReducers, reviewReducer } from \"./reducers/productReducers\";\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from \"./reducers/userReducers\";\nimport { cartReducers } from \"./reducers/cartReducers\";\nimport { newOrderReducer, MyOrdersReducers, orderDetailReducer, allOrdersReducer, updateOrderReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  products: productReducers,\n  productDetails: productDetailsReducers,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducers,\n  orderDetails: orderDetailReducer,\n  order: newOrderReducer,\n  myOrders: MyOrdersReducers,\n  newProduct: newProductReducer,\n  deleteProduct: deleteProductReducer,\n  allOrder: allOrdersReducer,\n  updateOrder: updateOrderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  newReview: newReviewReducers,\n  review: reviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    ShippingInfo: localStorage.getItem('shippinginfo') ? JSON.parse(localStorage.getItem('shippinginfo')) : []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducers","productDetailsReducers","newProductReducer","deleteProductReducer","productReviewsReducer","newReviewReducers","reviewReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","userDetailsReducer","cartReducers","newOrderReducer","MyOrdersReducers","orderDetailReducer","allOrdersReducer","updateOrderReducer","reducer","products","productDetails","auth","user","forgotPassword","cart","orderDetails","order","myOrders","newProduct","deleteProduct","allOrder","updateOrder","allUsers","userDetails","productReviews","newReview","review","initialState","cartItems","localStorage","getItem","JSON","parse","ShippingInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAAyBC,sBAAzB,EAAgDC,iBAAhD,EAAkEC,oBAAlE,EAAuFC,qBAAvF,EAA6GC,iBAA7G,EAA+HC,aAA/H,QAAoJ,4BAApJ;AACA,SAASC,WAAT,EAAqBC,WAArB,EAAiCC,qBAAjC,EAAuDC,eAAvD,EAAuEC,kBAAvE,QAAgG,yBAAhG;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,eAAR,EAAwBC,gBAAxB,EAAyCC,kBAAzC,EAA4DC,gBAA5D,EAA6EC,kBAA7E,QAAsG,0BAAtG;AACA,MAAMC,OAAO,GAAGtB,eAAe,CAAC;AAC9BuB,EAAAA,QAAQ,EAACnB,eADqB;AAE9BoB,EAAAA,cAAc,EAACnB,sBAFe;AAG9BoB,EAAAA,IAAI,EAACd,WAHyB;AAI9Be,EAAAA,IAAI,EAACd,WAJyB;AAK9Be,EAAAA,cAAc,EAACd,qBALe;AAM9Be,EAAAA,IAAI,EAACZ,YANyB;AAO9Ba,EAAAA,YAAY,EAACV,kBAPiB;AAQ9BW,EAAAA,KAAK,EAACb,eARwB;AAS9Bc,EAAAA,QAAQ,EAACb,gBATqB;AAU9Bc,EAAAA,UAAU,EAAC1B,iBAVmB;AAW9B2B,EAAAA,aAAa,EAAC1B,oBAXgB;AAY9B2B,EAAAA,QAAQ,EAACd,gBAZqB;AAa9Be,EAAAA,WAAW,EAACd,kBAbkB;AAc/Be,EAAAA,QAAQ,EAACtB,eAdsB;AAe/BuB,EAAAA,WAAW,EAACtB,kBAfmB;AAgB/BuB,EAAAA,cAAc,EAAE9B,qBAhBe;AAiB/B+B,EAAAA,SAAS,EAAC9B,iBAjBqB;AAkB/B+B,EAAAA,MAAM,EAAC9B;AAlBwB,CAAD,CAA/B;AAoBA,IAAI+B,YAAY,GAAC;AACfb,EAAAA,IAAI,EAAC;AACHc,IAAAA,SAAS,EAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EADvF;AAEHG,IAAAA,YAAY,EAACJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAArC,GAAsF;AAFhG;AADU,CAAjB;AAOA,MAAMI,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AACA,MAAM+C,KAAK,GAAGlD,WAAW,CAACuB,OAAD,EAASmB,YAAT,EAAsBtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAAzC,CAAzB;AACA,eAAeC,KAAf","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducers,productDetailsReducers,newProductReducer,deleteProductReducer,productReviewsReducer,newReviewReducers,reviewReducer } from \"./reducers/productReducers\";\nimport { authReducer,userReducer,forgotPasswordReducer,allUsersReducer,userDetailsReducer} from \"./reducers/userReducers\";\nimport {cartReducers} from \"./reducers/cartReducers\";\nimport {newOrderReducer,MyOrdersReducers,orderDetailReducer,allOrdersReducer,updateOrderReducer} from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  products:productReducers,\n  productDetails:productDetailsReducers,\n  auth:authReducer,\n  user:userReducer,\n  forgotPassword:forgotPasswordReducer,\n  cart:cartReducers,\n  orderDetails:orderDetailReducer,\n  order:newOrderReducer,\n  myOrders:MyOrdersReducers,\n  newProduct:newProductReducer,\n  deleteProduct:deleteProductReducer,\n  allOrder:allOrdersReducer,\n  updateOrder:updateOrderReducer,\n allUsers:allUsersReducer,\n userDetails:userDetailsReducer,\n productReviews: productReviewsReducer,\n newReview:newReviewReducers,\n review:reviewReducer,\n}) \nlet initialState={\n  cart:{\n    cartItems:localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[],\n    ShippingInfo:localStorage.getItem('shippinginfo')?JSON.parse(localStorage.getItem('shippinginfo')):[]\n\n  }\n}\nconst middleware = [thunk];\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\nexport default store;\n"]},"metadata":{},"sourceType":"module"}