{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/user/updateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { Link } from 'react-router-dom';\nimport { updateProfile, loadUser, clearErrors } from \"../../actions/userActions\";\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState(\"\");\n  const [avatarPreview, setAvatarPreview] = useState(\"/images/default_avatar.jpg\");\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    isUpdated,\n    loading,\n    error\n  } = useSelector(state => state.user);\n  const {\n    token\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success(\"user updated successfully\");\n      dispatch(loadUser(token));\n      history.push(\"/me\");\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, alert, isUpdated, error, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"name\", name);\n    formData.set(\"email\", email);\n    formData.set(\"avatar\", avatar);\n    dispatch(updateProfile(formData, token));\n  };\n\n  const onChange = e => {\n    const reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = () => {\n      if (reader.readyState == 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'Update Profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-lg-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          className: \"shadow-lg\",\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mt-2 mb-5\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email_field\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"name\",\n              id: \"name_field\",\n              className: \"form-control\",\n              name: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email_field\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email_field\",\n              name: \"email\",\n              className: \"form-control\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"avatar_upload\",\n              children: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"avatar mr-3 item-rtl\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: avatarPreview,\n                    className: \"rounded-circle\",\n                    alt: \"Avatar Preview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-file\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"avatar\",\n                  className: \"custom-file-input\",\n                  id: \"customFile\",\n                  accept: \"image/*\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"custom-file-label\",\n                  htmlFor: \"customFile\",\n                  children: \"Choose Avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading ? true : false,\n            className: \"btn update-btn btn-block mt-4 mb-3\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProfile, \"fQrSvXYoWU3yqukikKGmTsM6/x4=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/components/user/updateProfile.js"],"names":["React","useEffect","useState","useAlert","useDispatch","useSelector","Loader","MetaData","Link","updateProfile","loadUser","clearErrors","UPDATE_PROFILE_RESET","UpdateProfile","history","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","alert","dispatch","user","state","auth","isUpdated","loading","error","token","url","success","push","type","submitHandler","e","preventDefault","formData","FormData","set","onChange","reader","FileReader","readAsDataURL","target","files","onload","readyState","result","value"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport { useAlert } from 'react-alert'\nimport { useDispatch,useSelector } from 'react-redux'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport {Link} from 'react-router-dom';\nimport {updateProfile,loadUser,clearErrors} from \"../../actions/userActions\";\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\nconst UpdateProfile = ({history}) => {\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [avatar,setAvatar] = useState(\"\");\n    const [avatarPreview,setAvatarPreview] = useState(\"/images/default_avatar.jpg\");\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {user} = useSelector(state=>state.auth);\n    const {isUpdated,loading,error} = useSelector(state=>state.user);\n    const {token} = useSelector(state=>state.auth);\n    useEffect(() => {\n        if(user){\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url);\n        }\n       if(error){\n           alert.error(error);\n           dispatch(clearErrors());\n       }\n       if(isUpdated){\n           alert.success(\"user updated successfully\");\n           dispatch(loadUser(token));\n           history.push(\"/me\");\n           dispatch({\n               type:UPDATE_PROFILE_RESET\n           })\n       }\n    }, [dispatch,alert,isUpdated,error,history])\n    const submitHandler = (e)=>{\n     e.preventDefault();\n     const formData = new FormData();\n     formData.set(\"name\",name);\n     formData.set(\"email\",email);\n   \n     formData.set(\"avatar\",avatar);\n     dispatch(updateProfile(formData,token))\n    }\n    const onChange = e =>{\n      \n          const reader = new FileReader();\n          reader.readAsDataURL(e.target.files[0]);\n          reader.onload = ()=>{\n              if(reader.readyState == 2){\n                  setAvatarPreview(reader.result);\n                  setAvatar(reader.result);\n              }\n          }\n        \n    }\n    return (\n       <>\n       <MetaData title={'Update Profile'}></MetaData>\n        <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form onSubmit={submitHandler} className=\"shadow-lg\" encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\tid=\"name_field\" \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e)=>setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                name=\"email\"\n                                className=\"form-control\"\n                              \n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                    className='custom-file-input'\n                                    id='customFile'\n                                    accept=\"image/*\"\n                                    onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                      \n                        <button type=\"submit\" disabled={loading?true:false} className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                    </form>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default UpdateProfile\n"]},"metadata":{},"sourceType":"module"}