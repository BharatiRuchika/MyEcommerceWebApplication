{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/admin/UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers, clearErrors, deleteUser } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { MDBDataTable } from 'mdbreact';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UsersList = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    isDeleted\n  } = useSelector(state => state.user);\n  const {\n    token\n  } = useSelector(state => state.auth); // console.log(\"final deleted\",isDeleted);\n\n  useEffect(() => {\n    // console.log(\"im in useEffect\");\n    dispatch(getAllUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isDeleted) {\n      alert.success('User deleted successfully');\n      history.push('/admin/users');\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n  }, [error, alert, dispatch, isDeleted, history]);\n\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'user ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteUserHandler(user._id),\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersList, \"XXS3T7KZbWIa4RWD2ujIHNxxGjg=\", false, function () {\n  return [useAlert, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/admin/UsersList.js"],"names":["React","useState","useEffect","Loader","MetaData","useAlert","useDispatch","useSelector","getAllUsers","clearErrors","deleteUser","Link","Sidebar","MDBDataTable","DELETE_USER_RESET","UsersList","history","alert","dispatch","loading","error","users","state","allUsers","isDeleted","user","token","auth","success","push","type","deleteUserHandler","id","setUsers","data","columns","label","field","sort","rows","forEach","_id","name","email","role","actions"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getAllUsers,clearErrors,deleteUser } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport { MDBDataTable } from 'mdbreact'\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nconst UsersList = ({history}) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,users} = useSelector(state=>state.allUsers)\n    const { isDeleted } = useSelector(state => state.user);\n    const { token } = useSelector(state => state.auth);\n    // console.log(\"final deleted\",isDeleted);\n    useEffect(() => {\n        // console.log(\"im in useEffect\");\n        dispatch(getAllUsers())\n        if(error){\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n    if (isDeleted) {\n        alert.success('User deleted successfully');\n        history.push('/admin/users');\n        dispatch({ type: DELETE_USER_RESET })\n    }\n}, [error,alert,dispatch,isDeleted,history])\nconst deleteUserHandler = (id) => {\n    dispatch(deleteUser(id))\n}\n    const setUsers = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'user ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Name',\n                  field:'name',\n                  sort:'asc'\n              },{\n                label:'Email',\n                field:'email',\n                sort:'asc'\n            },\n            {\n                label:'Role',\n                field:'role',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                \n            }\n          ],\n          rows:[\n\n          ]\n        }\n        users.forEach(user=>{\n            data.rows.push({\n                id:user._id,\n                name:user.name,\n                email:user.email,\n                role:user.role,\n                actions:<><Link to={`/admin/user/${user._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-pencil\"></i>\n                </Link>\n                <button onClick={() => deleteUserHandler(user._id)} className=\"btn btn-danger py-1 px-2 ml-2\">\n                <i className=\"fa fa-trash\"></i>    \n                </button></>\n            })\n        })\n        return data;\n    }\n    return (\n        <>\n        <MetaData title={'All Users'} />\n        <div className=\"row\">\n            <div className=\"col-12 col-md-2\">\n                <Sidebar />\n            </div>\n\n            <div className=\"col-12 col-md-10\">\n                <>\n                    <h1 className=\"my-5\">All Users</h1>\n\n                    {loading ? <Loader /> : (\n                        <MDBDataTable\n                            data={setUsers()}\n                            className=\"px-3\"\n                            bordered\n                            striped\n                            hover\n                        />\n                    )}\n\n                </>\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nexport default UsersList\n"]},"metadata":{},"sourceType":"module"}