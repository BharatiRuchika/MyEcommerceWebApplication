{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, LOAD_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGOUT_FAIL, LOGOUT_SUCCESS, UPDATE_PASSWORD_FAIL, UPDATE_PROFILE_SUCCESS, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, NEW_PASSWORD_FAIL, NEW_PASSWORD_REQUEST, NEW_PASSWORD_SUCCESS, ALL_USERS_SUCCESS, ALL_USERS_REQUEST, ALL_USERS_FAIL, UPDATE_USER_SUCCESS, UPDATE_USER_REQUEST, UPDATE_USER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, DELETE_USER_FAIL, DELETE_USER_REQUEST, DELETE_USER_SUCCESS } from \"../constants/userConstants\"; // import { getStripeData} from '../actions/stripeActions';\n\nimport axios from \"axios\"; //login\n\nexport const login = (email, password) => async dispatch => {\n  // console.log(\"im in login\");\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/auth/login\", {\n      email,\n      password\n    }, config); // console.log(\"loginuserdata\",data);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    //    console.log(\"im in login catch\");\n    //    console.log(\"error\",error.response.data.errMessage);\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //register user\n\nexport const register = userData => async dispatch => {\n  // console.log(\"im in register\");\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/auth/register\", userData, config); //  console.log(\"registerdata\",data);\n\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    console.log(\"error\", error.response);\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //load user\n\nexport const loadUser = () => async dispatch => {\n  //  console.log(\"im in load user\");\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:3001/auth/me\");\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    }); // }\n  } catch (error) {\n    //   console.log(\"Error\",error);\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //logout user\n\nexport const logoutUser = () => async dispatch => {\n  // console.log(\"im in load user\");\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:3001/auth/logout\"); // console.log(\"logoutuserdata\",data);\n\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    // console.log(\"logouterrpr\",error);\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //register user\n\nexport const updateProfile = (userData, token) => async dispatch => {\n  // console.log(\"im in register\");\n  console.log(\"im in update profile\");\n  console.log(\"token\", token);\n\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"http://localhost:3001/auth/me/update\", userData, config); //  console.log(\"userdata\",data);\n\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //update password\n\nexport const updatePassword = (passwords, token) => async dispatch => {\n  console.log(\"im in update password\");\n  console.log(\"token\", token);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"http://localhost:3001/auth/password/updatepassword\", passwords, config); //  console.log(\"userdata\",data);\n\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    // console.log(\"error\",error.response);\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //reset password\n\nexport const resetPassword = (token, passwords) => async dispatch => {\n  // console.log(\"im in new password\");\n  try {\n    dispatch({\n      type: NEW_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:3001/auth/password/reset/${token}`, passwords, config); //  console.log(\"userdata\",data);\n\n    dispatch({\n      type: NEW_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    // console.log(\"error\",error.response);\n    dispatch({\n      type: NEW_PASSWORD_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //forgot password\n\nexport const forgotPassword = email => async dispatch => {\n  // console.log(\"im in forgot password\");\n  // console.log(\"email\",email);\n  try {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:3001/auth/password/forgot\", email, config); //  console.log(\"userdata\",data);\n\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: data.message\n    });\n  } catch (error) {\n    // console.log(\"error\",error.response);\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const getAllUsers = token => async dispatch => {\n  console.log(\"im in getallusers\", token); // console.log(\"im in get users\");\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: ALL_USERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"http://localhost:3001/auth/admin/users\", config); // console.log(\"Allusersdata\",data);\n\n    dispatch({\n      type: ALL_USERS_SUCCESS,\n      payload: data.users\n    }); // }\n  } catch (error) {\n    //    console.log(\"im in cathc\");\n    //    console.log(\"error\",error);\n    dispatch({\n      type: ALL_USERS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const updateUser = (id, userData, token) => async dispatch => {\n  try {\n    console.log(\"im in update user\");\n    console.log(\"token\", token);\n    dispatch({\n      type: UPDATE_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:3001/auth/admin/user/${id}`, userData, config);\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:3001/auth/admin/user/${id}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; // Delete user - ADMIN\n\nexport const deleteUser = id => async dispatch => {\n  // console.log(\"im in delete user\")\n  // console.log(\"id\",id);\n  try {\n    dispatch({\n      type: DELETE_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`http://localhost:3001/auth/admin/user/${id}`); //   console.log(\"deleteData\",data);  \n\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_USER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //clear error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/actions/userActions.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_SUCCESS","REGISTER_USER_REQUEST","LOAD_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOGOUT_FAIL","LOGOUT_SUCCESS","UPDATE_PASSWORD_FAIL","UPDATE_PROFILE_SUCCESS","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_REQUEST","FORGOT_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","ALL_USERS_SUCCESS","ALL_USERS_REQUEST","ALL_USERS_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_REQUEST","UPDATE_USER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","DELETE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","errMessage","register","userData","console","log","loadUser","get","logoutUser","updateProfile","token","put","success","updatePassword","passwords","resetPassword","forgotPassword","message","getAllUsers","users","updateUser","id","getUserDetails","deleteUser","delete","clearErrors"],"mappings":"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","sourcesContent":["import {LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAIL,CLEAR_ERRORS,REGISTER_USER_FAIL,REGISTER_USER_SUCCESS,REGISTER_USER_REQUEST,\nLOAD_USER_FAIL,LOAD_USER_REQUEST,LOAD_USER_SUCCESS,LOGOUT_FAIL,LOGOUT_SUCCESS,\nUPDATE_PASSWORD_FAIL,UPDATE_PROFILE_SUCCESS,UPDATE_PASSWORD_REQUEST,UPDATE_PASSWORD_SUCCESS,UPDATE_PROFILE_FAIL,UPDATE_PROFILE_REQUEST,\nFORGOT_PASSWORD_FAIL,\nFORGOT_PASSWORD_REQUEST,\nFORGOT_PASSWORD_SUCCESS,\nNEW_PASSWORD_FAIL,\nNEW_PASSWORD_REQUEST,\nNEW_PASSWORD_SUCCESS,\nALL_USERS_SUCCESS,\nALL_USERS_REQUEST,\nALL_USERS_FAIL,\nUPDATE_USER_SUCCESS,\nUPDATE_USER_REQUEST,\nUPDATE_USER_FAIL,\nUSER_DETAILS_REQUEST,\nUSER_DETAILS_SUCCESS,\nUSER_DETAILS_FAIL,\nDELETE_USER_FAIL,\nDELETE_USER_REQUEST,\nDELETE_USER_SUCCESS\n} from \"../constants/userConstants\";\n\n// import { getStripeData} from '../actions/stripeActions';\nimport axios from \"axios\";\n\n//login\nexport const login = (email,password)=>async(dispatch)=>{\n    \n    // console.log(\"im in login\");\n   try{\n     dispatch({\n         type:LOGIN_REQUEST\n    })\n    const config={\n      headers:{\n          'Content-Type':'application/json'\n      }\n    }\nconst {data} = await axios.post(\"http://localhost:3001/auth/login\",{email,password},config)\n// console.log(\"loginuserdata\",data);\ndispatch({\n    type:LOGIN_SUCCESS,\n    payload:data.user\n})\n\n   }catch(error){\n    //    console.log(\"im in login catch\");\n    //    console.log(\"error\",error.response.data.errMessage);\n    dispatch({\n        type:LOGIN_FAIL,\n        payload:error.response.data.errMessage\n    })\n   }\n}\n\n//register user\nexport const register = (userData)=>async(dispatch)=>{\n    // console.log(\"im in register\");\n    try{\n      dispatch({\n          type:REGISTER_USER_REQUEST\n     })\n     const config={\n       headers:{\n           'Content-Type':'multipart/form-data'\n       }\n     }\n const {data} = await axios.post(\"http://localhost:3001/auth/register\",userData,config)\n//  console.log(\"registerdata\",data);\n dispatch({\n     type:REGISTER_USER_SUCCESS,\n     payload:data.user\n })\n \n    }catch(error){\n        console.log(\"error\",error.response);\n     dispatch({\n         type:REGISTER_USER_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n //load user\n export const loadUser = ()=>async(dispatch)=>{\n    //  console.log(\"im in load user\");\n    try{\n      dispatch({\n          type:LOAD_USER_REQUEST\n     })\n    \n const {data} = await axios.get(\"http://localhost:3001/auth/me\");\n dispatch({\n     type:LOAD_USER_SUCCESS,\n     payload:data.user\n })\n// }\n    }catch(error){\n    //   console.log(\"Error\",error);\n     dispatch({\n         type:LOAD_USER_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n //logout user\n export const logoutUser = ()=>async(dispatch)=>{\n    // console.log(\"im in load user\");\n   try{\n  const {data} = await axios.get(\"http://localhost:3001/auth/logout\");\n// console.log(\"logoutuserdata\",data);\ndispatch({\n    type:LOGOUT_SUCCESS\n})\n}catch(error){\n    // console.log(\"logouterrpr\",error);\n    dispatch({\n        type:LOGOUT_FAIL,\n        payload:error.response.data.errMessage\n    })\n   }\n}\n\n//register user\nexport const updateProfile = (userData,token)=>async(dispatch)=>{\n    // console.log(\"im in register\");\n    console.log(\"im in update profile\")\n    console.log(\"token\",token)\n    try{\n      dispatch({\n          type:UPDATE_PROFILE_REQUEST\n     })\n     const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n const {data} = await axios.put(\"http://localhost:3001/auth/me/update\",userData,config)\n//  console.log(\"userdata\",data);\n dispatch({\n     type:UPDATE_PROFILE_SUCCESS,\n     payload:data.success\n })\n \n    }catch(error){\n     dispatch({\n         type:UPDATE_PROFILE_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n//update password\nexport const updatePassword = (passwords,token)=>async(dispatch)=>{\n    console.log(\"im in update password\");\n    console.log(\"token\",token);\n    const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n    try{\n      dispatch({\n          type:UPDATE_PASSWORD_REQUEST\n     })\n     const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n const {data} = await axios.put(\"http://localhost:3001/auth/password/updatepassword\",passwords,config)\n//  console.log(\"userdata\",data);\n dispatch({\n     type:UPDATE_PASSWORD_SUCCESS,\n     payload:data.success\n })\n \n    }catch(error){\n        // console.log(\"error\",error.response);\n     dispatch({\n         type:UPDATE_PASSWORD_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n //reset password\n export const resetPassword = (token,passwords)=>async(dispatch)=>{\n    // console.log(\"im in new password\");\n    try{\n      dispatch({\n          type:NEW_PASSWORD_REQUEST\n     })\n     const config={\n       headers:{\n           'Content-Type':'application/json'\n       }\n     }\n const {data} = await axios.put(`http://localhost:3001/auth/password/reset/${token}`,passwords,config)\n//  console.log(\"userdata\",data);\n dispatch({\n     type:NEW_PASSWORD_SUCCESS,\n     payload:data.success\n })\n \n    }catch(error){\n        // console.log(\"error\",error.response);\n     dispatch({\n         type:NEW_PASSWORD_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n  //forgot password\n  export const forgotPassword = (email)=>async(dispatch)=>{\n    // console.log(\"im in forgot password\");\n    // console.log(\"email\",email);\n    try{\n      dispatch({\n          type:FORGOT_PASSWORD_REQUEST\n     })\n     const config={\n       headers:{\n           'Content-Type':'application/json'\n       }\n     }\n const {data} = await axios.post(\"http://localhost:3001/auth/password/forgot\",email,config)\n//  console.log(\"userdata\",data);\n dispatch({\n     type:FORGOT_PASSWORD_SUCCESS,\n     payload:data.message\n })\n \n    }catch(error){\n        // console.log(\"error\",error.response);\n     dispatch({\n         type:FORGOT_PASSWORD_FAIL,\n         payload:error.response.data.errMessage\n     })\n    }\n }\n\n export const getAllUsers = (token)=>async(dispatch)=>{\n    console.log(\"im in getallusers\",token);\n    // console.log(\"im in get users\");\n    const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n   try{\n     dispatch({\n         type:ALL_USERS_REQUEST\n    })\n   \nconst {data} = await axios.get(\"http://localhost:3001/auth/admin/users\",config);\n// console.log(\"Allusersdata\",data);\n\ndispatch({\n    type:ALL_USERS_SUCCESS,\n    payload:data.users\n})\n// }\n   }catch(error){\n    //    console.log(\"im in cathc\");\n    //    console.log(\"error\",error);\n    dispatch({\n        type:ALL_USERS_FAIL,\n        payload:error.response.data.errMessage\n    })\n   }\n}\n\n\nexport const updateUser = (id, userData,token) => async (dispatch) => {\n    try {\nconsole.log(\"im in update user\");\nconsole.log(\"token\",token);\n        dispatch({ type: UPDATE_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':`${token}`\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:3001/auth/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n    dispatch({ type: USER_DETAILS_REQUEST })\n const { data } = await axios.get(`http://localhost:3001/auth/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\n// Delete user - ADMIN\nexport const deleteUser = (id) => async (dispatch) => {\n    // console.log(\"im in delete user\")\n    // console.log(\"id\",id);\n    try {\n\n dispatch({ type: DELETE_USER_REQUEST })\n  const { data } = await axios.delete(`http://localhost:3001/auth/admin/user/${id}`);\n//   console.log(\"deleteData\",data);  \n  dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n//clear error\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n }"]},"metadata":{},"sourceType":"module"}