{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_ORDER_FAIL, CREATE_ORDER_SUCCESS, CREATE_ORDER_REQUEST, CLEAR_ERRORS, MY_ORDERS_FAIL, MY_ORDERS_SUCCESS, MY_ORDERS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ALL_ORDERS_SUCCESS, ALL_ORDERS_REQUEST, ALL_ORDERS_FAIL, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_REQUEST, UPDATE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, DELETE_ORDER_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = (order, token) => async (dispatch, getState) => {\n  // console.log(\"im in create order\");\n  // console.log(\"order\",order);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"https://my-ecommerce-web-application.vercel.app/order/neworder\", order, config); //    console.log(\"order Data\",data);\n\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get currently logged in user orders\n\nexport const myOrders = token => async (dispatch, getState) => {\n  console.log(\"im in myorders\");\n  console.log(\"token\", token);\n\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(\"https://my-ecommerce-web-application.vercel.app/order/myorders\", config); //    console.log(\"data\",data);\n\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get specific order details\n\nexport const orderDetails = (id, token) => async (dispatch, getState) => {\n  console.log(\"im in order details\");\n  console.log(\"token\", token);\n\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/singleorder/${id}`, config); //    console.log(\"data\",data);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get all orders details\n\nexport const getAllOrders = token => async (dispatch, getState) => {\n  console.log(\"im in getAllOrders\", token);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${token}`\n    }\n  }; // console.log(\"im in order details\");\n\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/admin/orders`, config); //    console.log(\"data\",data);\n\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //update order-admin\n\nexport const updateOrder = (id, orderData, token) => async (dispatch, getState) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.put(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`, orderData, config); //    console.log(\"updateData\",data);\n\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const deleteOrder = (id, token) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`, config); //    console.log(\"deleteData\",data.success);\n\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //clear error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/actions/orderActions.js"],"names":["axios","CREATE_ORDER_FAIL","CREATE_ORDER_SUCCESS","CREATE_ORDER_REQUEST","CLEAR_ERRORS","MY_ORDERS_FAIL","MY_ORDERS_SUCCESS","MY_ORDERS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ALL_ORDERS_SUCCESS","ALL_ORDERS_REQUEST","ALL_ORDERS_FAIL","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_REQUEST","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","createOrder","order","token","dispatch","getState","config","headers","type","data","post","payload","error","response","errMessage","myOrders","console","log","get","orders","orderDetails","id","getAllOrders","updateOrder","orderData","put","success","deleteOrder","delete","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { CREATE_ORDER_FAIL,CREATE_ORDER_SUCCESS,CREATE_ORDER_REQUEST,CLEAR_ERRORS,MY_ORDERS_FAIL,MY_ORDERS_SUCCESS,MY_ORDERS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_REQUEST,ORDER_DETAILS_FAIL,ALL_ORDERS_SUCCESS,ALL_ORDERS_REQUEST,ALL_ORDERS_FAIL,UPDATE_ORDER_SUCCESS,UPDATE_ORDER_REQUEST,UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n   DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL } from \"../constants/orderConstants\";\nexport const createOrder = (order,token)=>async(dispatch,getState)=>{\n    // console.log(\"im in create order\");\n    // console.log(\"order\",order);\n    const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization': `${token}`\n        }\n      }\n    try{\n       dispatch({\n           type:CREATE_ORDER_REQUEST\n       })\n       const {data} = await axios.post(\"https://my-ecommerce-web-application.vercel.app/order/neworder\",order,config);\n    //    console.log(\"order Data\",data);\n       dispatch({\n           type:CREATE_ORDER_SUCCESS,\n           payload:data\n       })\n    }catch(error){\n        dispatch({\n            type:CREATE_ORDER_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get currently logged in user orders\nexport const myOrders = (token)=>async(dispatch,getState)=>{\n    console.log(\"im in myorders\");\n    console.log(\"token\",token);\n    try{\n       dispatch({\n           type:MY_ORDERS_REQUEST\n       })\n\n       const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization': `${token}`\n        }\n      }\n       \n       const {data} = await axios.get(\"https://my-ecommerce-web-application.vercel.app/order/myorders\",config);\n    //    console.log(\"data\",data);\n       dispatch({\n           type:MY_ORDERS_SUCCESS,\n           payload:data.orders\n       })\n    }catch(error){\n        dispatch({\n            type:MY_ORDERS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get specific order details\nexport const orderDetails = (id,token)=>async(dispatch,getState)=>{\n\n    console.log(\"im in order details\");\n    console.log(\"token\",token);\n    try{\n       dispatch({\n           type:ORDER_DETAILS_REQUEST\n       })\n       const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization': `${token}`\n        }\n      }\nconst {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/singleorder/${id}`,config);\n    //    console.log(\"data\",data);\n       dispatch({\n           type:ORDER_DETAILS_SUCCESS,\n           payload:data.order\n       })\n    }catch(error){\n        dispatch({\n            type:ORDER_DETAILS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n\n//get all orders details\nexport const getAllOrders = (token)=>async(dispatch,getState)=>{\n    \n    console.log(\"im in getAllOrders\",token);\n    const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n    // console.log(\"im in order details\");\n    try{\n       dispatch({\n           type:ALL_ORDERS_REQUEST\n       })\n       \nconst {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/order/admin/orders`,config);\n    //    console.log(\"data\",data);\n       dispatch({\n           type:ALL_ORDERS_SUCCESS,\n           payload:data\n       })\n    }catch(error){\n        dispatch({\n            type:ALL_ORDERS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//update order-admin\nexport const updateOrder = (id,orderData,token)=>async(dispatch,getState)=>{\n    try{\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`${token}`\n            }\n          }\n       dispatch({\n           type:UPDATE_ORDER_REQUEST\n       })\n       const {data} = await axios.put(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`,orderData,config);\n    //    console.log(\"updateData\",data);\n       dispatch({\n           type:UPDATE_ORDER_SUCCESS,\n           payload:data.success\n       })\n    }catch(error){\n        dispatch({\n            type:UPDATE_ORDER_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const deleteOrder = (id,token) => async (dispatch) => {\n    try {\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                'Authorization':`${token}`\n            }\n          }\n\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        const { data } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/order/admin/orders/${id}`,config)\n//    console.log(\"deleteData\",data.success);\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.errMessage\n        })\n    }\n}\n\n//clear error\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n }"]},"metadata":{},"sourceType":"module"}