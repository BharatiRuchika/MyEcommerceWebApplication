{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducers, productDetailsReducers, newProductReducer, deleteProductReducer, productReviewsReducer, newReviewReducers, reviewReducer } from \"./reducers/productReducers\";\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from \"./reducers/userReducers\";\nimport { cartReducers } from \"./reducers/cartReducers\";\nimport { newOrderReducer, MyOrdersReducers, orderDetailReducer, allOrdersReducer, updateOrderReducer } from \"./reducers/orderReducers\";\nimport { stripeReducers } from \"./reducers/stripeReducer\";\nconst reducer = combineReducers({\n  products: productReducers,\n  productDetails: productDetailsReducers,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducers,\n  orderDetails: orderDetailReducer,\n  order: newOrderReducer,\n  myOrders: MyOrdersReducers,\n  newProduct: newProductReducer,\n  deleteProduct: deleteProductReducer,\n  allOrder: allOrdersReducer,\n  updateOrder: updateOrderReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  productReviews: productReviewsReducer,\n  newReview: newReviewReducers,\n  review: reviewReducer,\n  stripe: stripeReducers,\n  auth: authReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    ShippingInfo: localStorage.getItem('shippinginfo') ? JSON.parse(localStorage.getItem('shippinginfo')) : []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducers","productDetailsReducers","newProductReducer","deleteProductReducer","productReviewsReducer","newReviewReducers","reviewReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","userDetailsReducer","cartReducers","newOrderReducer","MyOrdersReducers","orderDetailReducer","allOrdersReducer","updateOrderReducer","stripeReducers","reducer","products","productDetails","auth","user","forgotPassword","cart","orderDetails","order","myOrders","newProduct","deleteProduct","allOrder","updateOrder","allUsers","userDetails","productReviews","newReview","review","stripe","initialState","cartItems","localStorage","getItem","JSON","parse","ShippingInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAAyBC,sBAAzB,EAAgDC,iBAAhD,EAAkEC,oBAAlE,EAAuFC,qBAAvF,EAA6GC,iBAA7G,EAA+HC,aAA/H,QAAoJ,4BAApJ;AACA,SAASC,WAAT,EAAqBC,WAArB,EAAiCC,qBAAjC,EAAuDC,eAAvD,EAAuEC,kBAAvE,QAAgG,yBAAhG;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,eAAR,EAAwBC,gBAAxB,EAAyCC,kBAAzC,EAA4DC,gBAA5D,EAA6EC,kBAA7E,QAAsG,0BAAtG;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,MAAMC,OAAO,GAAGvB,eAAe,CAAC;AAC9BwB,EAAAA,QAAQ,EAACpB,eADqB;AAE9BqB,EAAAA,cAAc,EAACpB,sBAFe;AAG9BqB,EAAAA,IAAI,EAACf,WAHyB;AAI9BgB,EAAAA,IAAI,EAACf,WAJyB;AAK9BgB,EAAAA,cAAc,EAACf,qBALe;AAM9BgB,EAAAA,IAAI,EAACb,YANyB;AAO9Bc,EAAAA,YAAY,EAACX,kBAPiB;AAQ9BY,EAAAA,KAAK,EAACd,eARwB;AAS9Be,EAAAA,QAAQ,EAACd,gBATqB;AAU9Be,EAAAA,UAAU,EAAC3B,iBAVmB;AAW9B4B,EAAAA,aAAa,EAAC3B,oBAXgB;AAY9B4B,EAAAA,QAAQ,EAACf,gBAZqB;AAa9BgB,EAAAA,WAAW,EAACf,kBAbkB;AAc/BgB,EAAAA,QAAQ,EAACvB,eAdsB;AAe/BwB,EAAAA,WAAW,EAACvB,kBAfmB;AAgB/BwB,EAAAA,cAAc,EAAE/B,qBAhBe;AAiB/BgC,EAAAA,SAAS,EAAC/B,iBAjBqB;AAkB/BgC,EAAAA,MAAM,EAAC/B,aAlBwB;AAmB/BgC,EAAAA,MAAM,EAACpB,cAnBwB;AAoB/BI,EAAAA,IAAI,EAACf;AApB0B,CAAD,CAA/B;AAsBA,IAAIgC,YAAY,GAAC;AACfd,EAAAA,IAAI,EAAC;AACHe,IAAAA,SAAS,EAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EADvF;AAEHG,IAAAA,YAAY,EAACJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAArC,GAAsF;AAFhG;AADU,CAAjB;AAOA,MAAMI,UAAU,GAAG,CAAChD,KAAD,CAAnB;AACA,MAAMiD,KAAK,GAAGpD,WAAW,CAACwB,OAAD,EAASoB,YAAT,EAAsBxC,mBAAmB,CAACF,eAAe,CAAC,GAAGiD,UAAJ,CAAhB,CAAzC,CAAzB;AACA,eAAeC,KAAf","sourcesContent":["import { createStore,combineReducers,applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productReducers,productDetailsReducers,newProductReducer,deleteProductReducer,productReviewsReducer,newReviewReducers,reviewReducer } from \"./reducers/productReducers\";\nimport { authReducer,userReducer,forgotPasswordReducer,allUsersReducer,userDetailsReducer} from \"./reducers/userReducers\";\nimport {cartReducers} from \"./reducers/cartReducers\";\nimport {newOrderReducer,MyOrdersReducers,orderDetailReducer,allOrdersReducer,updateOrderReducer} from \"./reducers/orderReducers\";\nimport { stripeReducers } from \"./reducers/stripeReducer\";\nconst reducer = combineReducers({\n  products:productReducers,\n  productDetails:productDetailsReducers,\n  auth:authReducer,\n  user:userReducer,\n  forgotPassword:forgotPasswordReducer,\n  cart:cartReducers,\n  orderDetails:orderDetailReducer,\n  order:newOrderReducer,\n  myOrders:MyOrdersReducers,\n  newProduct:newProductReducer,\n  deleteProduct:deleteProductReducer,\n  allOrder:allOrdersReducer,\n  updateOrder:updateOrderReducer,\n allUsers:allUsersReducer,\n userDetails:userDetailsReducer,\n productReviews: productReviewsReducer,\n newReview:newReviewReducers,\n review:reviewReducer,\n stripe:stripeReducers,\n auth:authReducer\n}) \nlet initialState={\n  cart:{\n    cartItems:localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[],\n    ShippingInfo:localStorage.getItem('shippinginfo')?JSON.parse(localStorage.getItem('shippinginfo')):[]\n\n  }\n}\nconst middleware = [thunk];\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\nexport default store;\n"]},"metadata":{},"sourceType":"module"}