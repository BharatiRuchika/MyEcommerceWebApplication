{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS, PRODUCTS_DETAILS_FAIL, PRODUCTS_DETAILS_SUCCESS, PRODUCTS_DETAILS_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_REQUEST, NEW_REVIEW_FAIL, ADMIN_PRODUCTS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_REQUEST, UPDATE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_RESET, DELETE_REVIEW_FAIL } from \"../constants/productConstants\";\nimport { useSelector } from \"react-redux\";\nexport const getProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 ? arguments[2] : undefined;\n  let category = arguments.length > 3 ? arguments[3] : undefined;\n  let rating = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_PRODUCTS_REQUEST\n      });\n      let link = `https://my-ecommerce-web-application.vercel.app/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n      if (category) {\n        link = `https://my-ecommerce-web-application.vercel.app/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n      }\n\n      const {\n        data\n      } = await axios.get(link);\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.errMessage\n      });\n    }\n  };\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    // console.log(\"im in product details actions\");\n    dispatch({\n      type: PRODUCTS_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/getproduct/${id}`); //   console.log(\"actiondata\",data.product);\n\n    dispatch({\n      type: PRODUCTS_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCTS_DETAILS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n};\nexport const newReview = (formData, token) => async dispatch => {\n  // console.log(\"im in new review action\");\n  // console.log(\"reviewdata\",reviewData);\n  // const {token}  = useSelector(state => state.auth);\n  try {\n    // console.log(\"im in product details actions\");\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`https://my-ecommerce-web-application.vercel.app/products/review`, formData, config); //   console.log(\"newreviewdata\",data.success);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    console.log(\"Error\", error);\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //get admin producrs\n\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    // console.log(\"im in admin product details actions\");\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/admin/getproducts`); //   console.log(\"actiondata\",data.product);\n\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //create new product\n\nexport const newProduct = (productData, token) => async dispatch => {\n  // console.log(\"token\",token);\n  try {\n    // console.log(\"product data\",productData);\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"https://my-ecommerce-web-application.vercel.app/products/admin/createProduct\", productData, config);\n    console.log(\"newproductdata\", data);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"im in error\");\n    console.log(\"error\", error);\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //delete product\n\nexport const deleteProduct = (id, token) => async dispatch => {\n  try {\n    //   console.log(\"im in delete product action\");\n    //   console.log(\"deletId\",id);\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/products/admin/deleteProduct/${id}`, config); //   console.log(\"newproductdata\",data);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //update product\n\nexport const updateProduct = (id, productData, token) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.put(`https://my-ecommerce-web-application.vercel.app/products/admin/updateProduct/${id}`, productData, config); //   console.log(\"newproductdata\",data);\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; // Get product reviews\n\nexport const getProductReviews = (id, token) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    }; // console.log(\"im in review action\");\n\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/reviews?id=${id}`, config); // console.log(\"reviewData\",data);\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; // Delete product review\n\nexport const deleteReview = (id, productId, token) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/products/review?id=${id}&productId=${productId}`, config);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    console.log(error.response);\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.errMessage\n    });\n  }\n}; //clear error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce/Ecommerce-Backend-main/client/src/actions/productActions.js"],"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","PRODUCTS_DETAILS_FAIL","PRODUCTS_DETAILS_SUCCESS","PRODUCTS_DETAILS_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_REQUEST","NEW_REVIEW_FAIL","ADMIN_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_REQUEST","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","useSelector","getProducts","keyword","currentPage","price","category","rating","dispatch","type","link","data","get","payload","error","response","errMessage","getProductDetails","id","product","newReview","formData","token","config","headers","put","success","console","log","getAdminProducts","products","newProduct","productData","post","deleteProduct","delete","updateProduct","getProductReviews","reviews","deleteReview","productId","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {ALL_PRODUCTS_REQUEST,ALL_PRODUCTS_SUCCESS,ALL_PRODUCTS_FAIL,CLEAR_ERRORS,PRODUCTS_DETAILS_FAIL,PRODUCTS_DETAILS_SUCCESS,PRODUCTS_DETAILS_REQUEST,NEW_REVIEW_SUCCESS,NEW_REVIEW_REQUEST,NEW_REVIEW_FAIL,ADMIN_PRODUCTS_FAIL,ADMIN_PRODUCTS_REQUEST,ADMIN_PRODUCTS_SUCCESS, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL,DELETE_PRODUCT_FAIL,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_REQUEST,UPDATE_PRODUCT_FAIL,UPDATE_PRODUCT_REQUEST,UPDATE_PRODUCT_SUCCESS,GET_REVIEWS_REQUEST,GET_REVIEWS_SUCCESS,GET_REVIEWS_FAIL,DELETE_REVIEW_REQUEST,DELETE_REVIEW_SUCCESS,DELETE_REVIEW_RESET,DELETE_REVIEW_FAIL} from \"../constants/productConstants\";\n\nimport { useSelector } from \"react-redux\";\n\n\nexport const getProducts = (keyword=\"\",currentPage=1,price,category,rating=0)=>async (dispatch)=>{\n    try{\n      dispatch({type:ALL_PRODUCTS_REQUEST})\n      let link = `https://my-ecommerce-web-application.vercel.app/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n      if(category){\n        link = `https://my-ecommerce-web-application.vercel.app/products/getproducts?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n      }\n      const {data} = await axios.get(link);\n      dispatch({\n          type:ALL_PRODUCTS_SUCCESS,\n          payload:data\n      })\n    }catch(error){\n        dispatch({\n            type:ALL_PRODUCTS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const getProductDetails = (id)=>async (dispatch)=>{\n    try{\n        // console.log(\"im in product details actions\");\n      dispatch({type:PRODUCTS_DETAILS_REQUEST})\n      const {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/getproduct/${id}`);\n    //   console.log(\"actiondata\",data.product);\n      dispatch({\n          type:PRODUCTS_DETAILS_SUCCESS,\n          payload:data.product\n      })\n    }catch(error){\n        dispatch({\n            type:PRODUCTS_DETAILS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\nexport const newReview = (formData,token)=>async (dispatch)=>{\n    // console.log(\"im in new review action\");\n    // console.log(\"reviewdata\",reviewData);\n    // const {token}  = useSelector(state => state.auth);\n    try{\n        // console.log(\"im in product details actions\");\n      dispatch({type:NEW_REVIEW_REQUEST})\n      const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization': `${token}`\n        }\n      }\n\n\n      const {data} = await axios.put(`https://my-ecommerce-web-application.vercel.app/products/review`,formData,config);\n    //   console.log(\"newreviewdata\",data.success);\n      dispatch({\n          type:NEW_REVIEW_SUCCESS,\n          payload:data.success\n      })\n    }catch(error){\n        console.log(\"Error\",error);\n        dispatch({\n            type:NEW_REVIEW_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//get admin producrs\nexport const getAdminProducts = ()=>async (dispatch)=>{\n    try{\n        // console.log(\"im in admin product details actions\");\n      dispatch({type:ADMIN_PRODUCTS_REQUEST})\n      const {data} = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/admin/getproducts`);\n    //   console.log(\"actiondata\",data.product);\n      dispatch({\n          type:ADMIN_PRODUCTS_SUCCESS,\n          payload:data.products\n      })\n    }catch(error){\n        dispatch({\n            type:ADMIN_PRODUCTS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//create new product\nexport const newProduct = (productData,token)=>async(dispatch)=>{\n    // console.log(\"token\",token);\n   try{\n    // console.log(\"product data\",productData);\n    \n     dispatch({type:NEW_PRODUCT_REQUEST});\n     const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n      \n    const {data} = await axios.post(\"https://my-ecommerce-web-application.vercel.app/products/admin/createProduct\",productData,config);\n    console.log(\"newproductdata\",data);\n     dispatch({type:NEW_PRODUCT_SUCCESS, payload: data})\n   }catch(error){\n    console.log(\"im in error\");\n    console.log(\"error\",error);\n      dispatch({type:NEW_PRODUCT_FAIL,payload: error.response.data.errMessage})\n   }\n}\n\n//delete product\nexport const deleteProduct = (id,token)=>async(dispatch)=>{\n    try{\n    //   console.log(\"im in delete product action\");\n    //   console.log(\"deletId\",id);\n      dispatch({type:DELETE_PRODUCT_REQUEST});\n      const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n      const {data} = await axios.delete(`https://my-ecommerce-web-application.vercel.app/products/admin/deleteProduct/${id}`,config);\n    //   console.log(\"newproductdata\",data);\n      dispatch({type:DELETE_PRODUCT_SUCCESS, payload: data.success})\n    }catch(error){\n       dispatch({type:DELETE_PRODUCT_FAIL,payload: error.response.data.errMessage})\n    }\n }\n\n //update product\n export const updateProduct = (id,productData,token)=>async(dispatch)=>{\n    try{\n      const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n      dispatch({type:UPDATE_PRODUCT_REQUEST});\n     \n      const {data} = await axios.put(`https://my-ecommerce-web-application.vercel.app/products/admin/updateProduct/${id}`,productData,config);\n    //   console.log(\"newproductdata\",data);\n      dispatch({type:UPDATE_PRODUCT_SUCCESS, payload: data.success})\n    }catch(error){\n       dispatch({type:UPDATE_PRODUCT_FAIL,payload: error.response.data.errMessage})\n    }\n }\n\n // Get product reviews\nexport const getProductReviews = (id,token) => async (dispatch) => {\n    try {\n      const config={\n        headers:{\n            'Content-Type':'application/json',\n            'Authorization':`${token}`\n        }\n      }\n        // console.log(\"im in review action\");\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`https://my-ecommerce-web-application.vercel.app/products/reviews?id=${id}`,config)\n        // console.log(\"reviewData\",data);\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId,token) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n        const config={\n          headers:{\n              'Content-Type':'application/json',\n              'Authorization':`${token}`\n          }\n        }\n        const { data } = await axios.delete(`https://my-ecommerce-web-application.vercel.app/products/review?id=${id}&productId=${productId}`,config)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload:error.response.data.errMessage\n        })\n    }\n}\n\n//clear error\nexport const clearErrors = ()=>async(dispatch)=>{\n   dispatch({\n       type:CLEAR_ERRORS\n   })\n}"]},"metadata":{},"sourceType":"module"}