{"ast":null,"code":"var _jsxFileName = \"/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/order/ListOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact'; // import { MDBDataTable } from 'mdbreact';\n\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myOrders, clearErrors } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListOrders = () => {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  useEffect(() => {\n    console.log(\"im in useEffect\");\n    dispatch(myOrders());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    console.log(\"im in list orders\");\n  }, [error, alert, dispatch]);\n\n  const setOrders = () => {\n    const data = {\n      columns: [{\n        label: 'Order ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Number Of Items',\n        field: 'numOfItems',\n        sort: 'asc'\n      }, {\n        label: 'Amount',\n        field: 'amount',\n        sort: 'asc'\n      }, {\n        label: 'Status',\n        field: 'status',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions',\n        sort: 'asc'\n      }],\n      rows: []\n    };\n    orders.forEach(order => {\n      data.rows.push({\n        id: order._id,\n        numOfItems: order.orderItems.length,\n        amount: `$${order.totalPrice}`,\n        status: order.orderStatus && String(order.orderStatus).includes(\"Delivered\") ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\"\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: order.orderStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this),\n        actions: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/order/${order._id}`,\n          className: \"btn btn-primary\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-eye\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'My Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      data: setOrders(),\n      className: \"px-3\",\n      bordered: true,\n      striped: true,\n      hover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListOrders, \"6PFN+ik03WP1KEyky43lvev0LUs=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = ListOrders;\nexport default ListOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOrders\");","map":{"version":3,"sources":["/Users/ruchikaashokbharati/Documents/Projects/Ecommerce1/Ecommerce-Backend-main/client/src/components/order/ListOrders.js"],"names":["React","useState","useEffect","MDBDataTable","Loader","MetaData","useAlert","useDispatch","useSelector","myOrders","clearErrors","Link","ListOrders","alert","dispatch","loading","error","orders","state","console","log","setOrders","data","columns","label","field","sort","rows","forEach","order","push","id","_id","numOfItems","orderItems","length","amount","totalPrice","status","orderStatus","String","includes","color","actions"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { MDBDataTable } from 'mdbreact'\n// import { MDBDataTable } from 'mdbreact';\nimport Loader from \"../layouts/loader\";\nimport MetaData from '../layouts/MetaData';\nimport { useAlert } from 'react-alert';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { myOrders,clearErrors } from '../../actions/orderActions';\nimport { Link } from 'react-router-dom';\nconst ListOrders = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n    const {loading,error,orders} = useSelector(state=>state.myOrders)\n    useEffect(() => {\n        console.log(\"im in useEffect\");\n       dispatch(myOrders())\n       if(error){\n        alert.error(error);\n        dispatch(clearErrors());\n    }\n       console.log(\"im in list orders\");\n    }, [error,alert,dispatch])\n    \n    const setOrders = ()=>{\n      const data = {\n          columns:[\n              {\n                  label:'Order ID',\n                  field:'id',\n                  sort:'asc'\n              },{\n                  label:'Number Of Items',\n                  field:'numOfItems',\n                  sort:'asc'\n              },{\n                label:'Amount',\n                field:'amount',\n                sort:'asc'\n            },\n            {\n                label:'Status',\n                field:'status',\n                sort:'asc'\n            },\n            {\n                label:'Actions',\n                field:'actions',\n                sort:'asc'\n            }\n          ],\n          rows:[\n\n          ]\n        }\n        orders.forEach(order=>{\n            data.rows.push({\n                id:order._id,\n                numOfItems:order.orderItems.length,\n                amount:`$${order.totalPrice}`,\n                status:order.orderStatus && String(order.orderStatus).includes(\"Delivered\")?\n                <p style={{color:\"green\"}}>{order.orderStatus}</p>:\n                <p style={{color:\"red\"}}>{order.orderStatus}</p>,\n                actions:<Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                    <i className=\"fa fa-eye\"></i>\n                </Link>\n            })\n        })\n        return data;\n    }\n    return (\n        <>\n       <MetaData title={'My Orders'}></MetaData>\n       <h1 className=\"mt-5\">My Orders</h1>\n       {loading?<Loader/>:\n        <MDBDataTable\n        data={setOrders()}\n        className=\"px-3\"\n        bordered\n        striped\n        hover\n    />\n       \n       }\n       </>\n    )\n}\n\nexport default ListOrders\n"]},"metadata":{},"sourceType":"module"}